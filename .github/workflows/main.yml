# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
permissions: write-all

on:
  push:
    tags:
    - '*'
jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew -Pversion={{ github.event.release.tag_name }} build

      # An optional step to also upload the `.jar` to the GitHub release assets
      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          # Make sure that this matches the file name of your .jar
          args: build/libs/*.jar application/java-archive
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Upload to Modrinth
        uses: cloudnode-pro/modrinth-publish@1.0.0
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: 64UYguZE
          file: build/libs/*.jar
          changelog: ${{ github.event.release.body }}
          loaders: paper, spigot
          api-domain: api.modrinth.com
